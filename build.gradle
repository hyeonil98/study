plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.lee'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def querydslVersion = "5.0.0"
def querydslDir = "src/main/generated"

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Jakarta
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
}

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
	delete file(querydslDir)
}

test {
	useJUnitPlatform()
}
